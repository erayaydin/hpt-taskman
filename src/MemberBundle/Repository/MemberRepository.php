<?php

namespace MemberBundle\Repository;
use MemberBundle\Entity\Member;

/**
 * MemberRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class MemberRepository extends \Doctrine\ORM\EntityRepository
{
    private $em;

    public function getId($id)
    {
        return $this->getEntityManager()->getRepository('MemberBundle:Member')->find($id);
    }

    public function all()
    {
        return $this->getEntityManager()->getRepository('MemberBundle:Member')->findAll();
    }

    public function remove($id)
    {
        $this->em = $this->getEntityManager();

        $member = $this->em->getRepository('MemberBundle:Member')->find($id);
        $this->em->remove($member);
        $this->em->flush();
    }

    public function add(Member $member)
    {
        $this->em = $this->getEntityManager();

        $this->em->persist($member);
        $this->em->flush();
    }

    public function update()
    {
        $this->em = $this->getEntityManager();
        $this->em->flush();
    }

    public function getMemberDetails()
    {
        $this->em = $this->getEntityManager();
        $connection = $this->em->getConnection();

        $statement = $connection->prepare('select
                                            m.pk_member_id,
                                            t.team_name,
                                            r.role_name,
                                            m.member_name,
                                            m.member_surname,
                                            m.member_email,
                                            m.member_created_date,
                                            m.member_modification_date
                                            from
                                            tm_members as m inner join tm_teams as t on m.fk_team_id = t.pk_team_id
                                            inner join tm_roles as r on m.fk_role_id = r.pk_role_id');
        $statement->execute();
        $result = $statement->fetchAll();

        return $result;
    }
}
